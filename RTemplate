#loading packages
install.packages("fBasics") #better statistics summaries than standard summary function
install.packages("XLConnect")

#Loading libraries
#data manipulation
library(tidyverse)
library(lubridate)
library(reshape)# use transpose and melt
library(dplyr)
library(mice)# imputations

#machine learning
library(caret)
library(gbm)
library(randomForest)

#graphics
library(ggplot2)
library(gridExtra)#plot multiple graphs on one plot
library(corrplot)

#statistics
library(fBasics)
library(car)
library(ROCR)
library(Hmisc)
library(knitr)

#reading data
library(readxl)
library(XLConnect)
library(rjson)
#------------------------------------------------------------------------------------------------------------------------------------------

#1. Load data
#load csv files
train <- read.csv('train.csv',
                  stringsAsFactors = FALSE, 
                  na.strings = c("NA",""), #which strings which are to be interpreted as NA
                  header=TRUE,# specifies whether there is a header row
                  sep=",",
                  row.names=c("X","Y","Z"),# specify row names
                  col.names=c("A","B","C"),# specify column names
                  as.is=1, # which columns to not convert over into factors
                  nrows=300,# number of rows to read in
                  blank.lines.skip = FALSE
                  skipNul=FALSE
                  )
test <-  read.csv('test.csv',stringsAsFactors = FALSE, na.strings = c("NA",""),header=TRUE, sep=",")

#load using read_csv from tidyverse
train<-read_csv(file, col_names = TRUE, col_types = list(col_double(), col_character()),
  locale = default_locale(), na = c("", "NA"), quoted_na = TRUE,
  quote = "\"", comment = "", trim_ws = TRUE, skip = 0, n_max = Inf,
  guess_max = min(1000, n_max), progress = show_progress())


#load excel file
train<-read_excel(xlsx_example, sheet = "chickwts")
train<-read_excel(xls_example, sheet = 4)
train<-read_excel(xlsx_example, n_max = 3)# specify number of rows to read in
train<-read_excel(xlsx_example, range = "C1:E4")
train<-read_excel(xlsx_example, range = cell_rows(1:4))
train<-read_excel(xlsx_example, range = cell_cols("B:D"))
train<-read_excel(xlsx_example, range = "mtcars!B1:D5")
train<-read_excel(xlsx_example, na = "setosa") #specify which values should be read as NAs

#load xml file
train <- xmlParse(file = "input.xml")

#load json file
train <- fromJSON(file = "input.json")




